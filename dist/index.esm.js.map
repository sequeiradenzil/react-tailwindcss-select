{"version":3,"file":"index.esm.js","sources":["../src/components/Spinner.tsx","../src/components/Icons.tsx","../src/hooks/use-onclick-outside.ts","../src/components/DisabledItem.tsx","../src/components/SelectProvider.tsx","../src/components/Item.tsx","../src/components/GroupItem.tsx","../src/components/Options.tsx","../src/components/Select.tsx"],"sourcesContent":["import React from 'react'\n\nconst Spinner: React.FC = () => {\n    return (\n        <svg className=\"animate-spin mr-0.5 h-5 w-5 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/><path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/></svg>\n    );\n};\n\nexport default Spinner","import React from \"react\";\n\ninterface Props {\n    className?: string\n}\n\nexport const CloseIcon: React.FC<Props> = ({className = \"\"}) => {\n    return (\n        <svg className={className} fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" /></svg>\n    );\n};\n\nexport const ChevronIcon: React.FC<Props> = ({className = \"\"}) => {\n    return (\n        <svg className={className} fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" /></svg>\n    );\n};\n\nexport const SearchIcon: React.FC<Props> = ({className = \"\"}) => {\n    return (\n        <svg className={className} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg>\n    );\n};","import React, { useEffect } from 'react';\n\nexport default function useOnClickOutside(ref: React.RefObject<HTMLDivElement>, handler: (e?: MouseEvent | TouchEvent) => void) {\n    useEffect(\n        () => {\n            const listener = (event: MouseEvent | TouchEvent) => {\n                if (!ref.current || ref.current.contains(event.target as Node)) {\n                    return;\n                }\n\n                handler(event);\n            };\n\n            document.addEventListener('mousedown', listener);\n            document.addEventListener('touchstart', listener);\n\n            return () => {\n                document.removeEventListener('mousedown', listener);\n                document.removeEventListener('touchstart', listener);\n            };\n        },\n\n        [ref, handler]\n    );\n}\n","import React from 'react'\n\ninterface DisabledItemProps {\n    children: JSX.Element | string\n}\n\nconst DisabledItem: React.FC<DisabledItemProps> = ({children}) => {\n    return (\n        <div className={`px-2 py-2 cursor-not-allowed truncate text-gray-400 select-none`}>\n            {children}\n        </div>\n    );\n};\n\nexport default DisabledItem;","import React, {createContext, useContext, useMemo} from \"react\";\nimport {Option} from \"./type\";\n\ninterface Store {\n    value: Option | Option[] | null,\n    handleValueChange: (selected: Option) => void,\n}\n\ninterface Props {\n    value: Option | Option[] | null,\n    handleValueChange: (selected: Option) => void,\n    children: JSX.Element\n}\n\nexport const SelectContext = createContext<Store>({\n    value: null,\n    handleValueChange: (selected) => {}\n});\n\nexport const useSelectContext = (): Store => {\n    return useContext(SelectContext);\n};\n\nconst SelectProvider: React.FC<Props> = ({value, handleValueChange, children}) => {\n    const store = useMemo(() => {\n        return {\n            value,\n            handleValueChange\n        };\n    }, [handleValueChange, value]);\n\n    return (\n        <SelectContext.Provider value={store}>\n            {children}\n        </SelectContext.Provider>\n    );\n};\n\nexport default SelectProvider;","import React, {useMemo} from \"react\";\nimport DisabledItem from \"./DisabledItem\";\nimport {Option} from \"./type\";\nimport {useSelectContext} from \"./SelectProvider\";\n\ninterface ItemProps {\n    item: Option\n}\n\nconst Item: React.FC<ItemProps> = ({item}) => {\n    const {value, handleValueChange} = useSelectContext();\n\n    const isSelected = useMemo(() => {\n        return value !== null && !Array.isArray(value) && value.value === item.value;\n    }, [item.value, value]);\n\n    return (\n        <>\n            {item.disabled ? (\n                <DisabledItem>\n                    {item.label}\n                </DisabledItem>\n            ) : (\n                <li\n                    aria-selected={isSelected}\n                    role={\"option\"}\n                    onClick={() => handleValueChange(item)}\n                    className={`block transition duration-200 px-2 py-2 cursor-pointer select-none truncate rounded ${isSelected ? 'text-white bg-blue-500' : 'text-gray-500 hover:bg-blue-100 hover:text-blue-500' }`}\n                >\n                    {item.label}\n                </li>\n            )}\n        </>\n    );\n};\n\nexport default Item;","import React from \"react\";\nimport {GroupOption} from \"./type\";\nimport Item from \"./Item\";\n\ninterface GroupItemProps {\n    item: GroupOption\n}\n\nconst GroupItem: React.FC<GroupItemProps> = ({item}) => {\n    return (\n        <>\n            {item.options.length > 0 && (\n                <>\n                    <div className={`pr-2 py-2 cursor-default select-none truncate font-bold text-gray-700`}>\n                        {item.label}\n                    </div>\n\n                    {item.options.map((item, index) => (\n                        <Item\n                            key={index}\n                            item={item}\n                        />\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default GroupItem;","import React, {useCallback, useMemo} from \"react\";\nimport Item from \"./Item\";\nimport DisabledItem from \"./DisabledItem\";\nimport {Option, Options as ListOption} from \"./type\";\nimport GroupItem from \"./GroupItem\";\n\ninterface OptionsProps {\n    list: ListOption,\n    noOptionsMessage: string,\n    text: string,\n    isMultiple: boolean,\n    value: Option | Option[] | null,\n}\n\nconst Options: React.FC<OptionsProps> = ({list, noOptionsMessage, text, isMultiple, value}) => {\n    const filterByText = useCallback(() => {\n        const filterItem = (item: Option) => {\n            return item.label.toLowerCase().indexOf(text.toLowerCase()) > -1;\n        };\n\n        let result = list.map(item => {\n            if (\"options\" in item) {\n                return  {\n                    label: item.label,\n                    options: item.options.filter(filterItem)\n                }\n            }\n            return item;\n        });\n\n        result = result.filter(item => {\n            if (\"options\" in item) {\n                return  item.options.length > 0;\n            }\n            return filterItem(item);\n        });\n\n        return result;\n    }, [text, list]);\n\n    const removeValues = useCallback((array: ListOption) => {\n        if (!isMultiple) {\n            return array;\n        }\n\n        if (Array.isArray(value)) {\n            const valueId = value.map(item => item.value);\n\n            const filterItem = (item: Option) => !valueId.includes(item.value);\n\n            let newArray = array.map(item => {\n                if (\"options\" in item) {\n                    return {\n                        label: item.label,\n                        options: item.options.filter(filterItem)\n                    }\n                }\n                return item;\n            });\n\n            newArray =  newArray.filter(item => {\n                if (\"options\" in item) {\n                    return item.options.length > 0;\n                } else {\n                    return filterItem(item);\n                }\n            });\n\n            return newArray;\n        }\n        return array;\n    }, [isMultiple, value]);\n\n    let filterResult = useMemo(() => {\n        return removeValues(filterByText());\n    }, [filterByText, removeValues]);\n\n    return (\n        <div role=\"options\" className=\"max-h-72 overflow-y-auto overflow-y-scroll\">\n            {filterResult.map((item, index) => (\n                <React.Fragment key={index}>\n                    {\"options\" in item ? (\n                        <>\n                            <div className=\"px-2.5\">\n                                <GroupItem\n                                    item={item}\n                                />\n                            </div>\n\n                            {index + 1 < filterResult.length && (\n                                <hr className=\"my-1\"/>\n                            )}\n                        </>\n                    ) : (\n                        <div className=\"px-2.5\">\n                            <Item\n                                item={item}\n                            />\n                        </div>\n                    )}\n                </React.Fragment>\n            ))}\n\n            {filterResult.length === 0 && (\n                <DisabledItem>\n                    {noOptionsMessage}\n                </DisabledItem>\n            )}\n        </div>\n    );\n};\n\nexport default Options;","import React, {createElement, useCallback, useEffect, useRef, useState} from \"react\";\nimport Spinner from \"./Spinner\";\nimport {ChevronIcon, CloseIcon} from \"./Icons\";\nimport useOnClickOutside from \"../hooks/use-onclick-outside\";\nimport SearchInput from \"./SearchInput\";\nimport Options from \"./Options\";\nimport {Option, Options as ListOption} from \"./type\";\nimport SelectProvider from \"./SelectProvider\";\n\ninterface SelectProps {\n    options: ListOption,\n    value: Option | Option[] | null,\n    onChange: (value?: Option | Option[] | null) => void,\n    placeholder?: string,\n    isMultiple?: boolean,\n    isClearable?: boolean,\n    isSearchable?: boolean,\n    isDisabled?: boolean,\n    loading?: boolean,\n    menuIsOpen?: boolean,\n    searchInputPlaceholder?: string,\n    noOptionsMessage?: string\n    enableInput?: boolean\n}\n\nconst Select: React.FC<SelectProps> = ({\n                                           options = [],\n                                           value = null,\n                                           onChange,\n                                           placeholder = \"Select...\",\n                                           searchInputPlaceholder = \"Search...\",\n                                           isMultiple = false,\n                                           isClearable = false,\n                                           isSearchable = false,\n                                           isDisabled = false,\n                                           loading = false,\n                                           menuIsOpen = false,\n                                           enableInput = false,\n                                           noOptionsMessage = \"No options found\"\n                                       }) => {\n    const [open, setOpen] = useState<boolean>(menuIsOpen);\n    const [list, setList] = useState<ListOption>(options);\n    const [inputValue, setInputValue] = useState<string>(\"\");\n    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const formatItem = (item: Option) => {\n            if ('disabled' in item)\n                return item;\n            return {\n                ...item,\n                disabled: false\n            }\n        }\n\n        setList(options.map(item => {\n            if (\"options\" in item) {\n                return {\n                    label: item.label,\n                    options: item.options.map(formatItem)\n                }\n            } else {\n                return formatItem(item);\n            }\n        }));\n    }, [options]);\n\n    const toggle = useCallback(() => {\n        if (!isDisabled) {\n            setOpen(!open);\n        }\n    }, [isDisabled, open]);\n\n    const closeDropDown = useCallback(() => {\n        if (open)\n            setOpen(false);\n    }, [open]);\n\n    useOnClickOutside(ref, () => {\n        closeDropDown();\n    });\n\n    const onPressEnterOrSpace = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        if ((e.code === \"Enter\" || e.code === \"Space\") && !isDisabled) {\n            toggle();\n        }\n    }, [isDisabled, toggle]);\n\n    const handleValueChange = useCallback((selected: Option) => {\n        function update() {\n            if (!isMultiple && !Array.isArray(value)) {\n                closeDropDown();\n                onChange(selected);\n            }\n\n            if (isMultiple && (Array.isArray(value) || value === null)) {\n                const filterdiv = document.getElementById('filterdiv');\n                onChange(value === null ? [selected] : [...value, selected]);\n            }\n            const filterdiv = document.getElementById('filterdiv');\n            if (selected.label !== null && filterdiv !== null) {\n                const createspan = document.createElement(\"span\")\n                const delbutton = document.createElement(\"button\")\n                delbutton.addEventListener(\"click\",function handleClick(event){\n                    event.stopPropagation()\n                    removeItem(selected)\n                })\n                delbutton.innerHTML=\"<span class=\\\"sr-only\\\">Remove large option</span>\\n\" +\n                    \"                        <svg class=\\\"h-2 w-2\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" viewBox=\\\"0 0 8 8\\\">\\n\" +\n                    \"                          <path strokeLinecap=\\\"round\\\" strokeWidth=\\\"1.5\\\" d=\\\"M1 1l6 6m0-6L1 7\\\"/> \\n\" +\n                    \"                        </svg>\"\n                createspan.innerHTML= selected.label + delbutton\n                // let addhtml = \" <span class=\\\"mr-5 inline-flex items-center rounded-full bg-indigo-100 py-0.5 pl-2.5 pr-1 text-sm font-medium text-indigo-700\\\">\\n\"+ selected.label+\n                //     \"                     <button  onclick=\\\"handleremoveItem(e, selected)\\\"  type=\\\"button\\\"\\n\" +\n                //     \"                              class=\\\"ml-0.5 inline-flex h-4 w-4 flex-shrink-0 items-center justify-center rounded-full text-indigo-400 hover:bg-indigo-200 hover:text-indigo-500 focus:bg-indigo-500 focus:text-white focus:outline-none\\\"> +\\n\" +\n                //     \"                        <span class=\\\"sr-only\\\">Remove large option</span>\\n\" +\n                //     \"                        <svg class=\\\"h-2 w-2\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" viewBox=\\\"0 0 8 8\\\">\\n\" +\n                //     \"                          <path strokeLinecap=\\\"round\\\" strokeWidth=\\\"1.5\\\" d=\\\"M1 1l6 6m0-6L1 7\\\"/>\\n\" +\n                //     \"                        </svg> \\n\" +\n                //     \"                      </button>\\n\" +\n                //     \"                    </span>\"\n                // filterdiv.innerHTML += addhtml;\n            }\n        }\n\n        if (selected !== value) {\n            update();\n        }\n    }, [closeDropDown, isMultiple, onChange, value]);\n\n    const clearValue = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n        e.stopPropagation();\n        onChange(null);\n    }, [onChange]);\n\n    const removeItem = useCallback(( item: Option) => {\n        if (isMultiple && Array.isArray(value) && value.length) {\n            const result = value.filter(current => item.value !== current.value);\n            onChange(result.length ? result : null);\n        }\n    }, [isMultiple, onChange, value]);\n\n\n    return (\n        <SelectProvider\n            value={value}\n            handleValueChange={handleValueChange}\n        >\n            <div className=\"relative w-full\" ref={ref}>\n                <div tabIndex={0} aria-expanded={open} onClick={toggle}\n                     className={`flex text-sm text-gray-500 border border-gray-300 rounded shadow-sm transition duration-300 focus:outline-none${isDisabled ? ' bg-gray-200' : ' bg-white hover:border-gray-400 focus:ring-2 focus:ring-blue-500'}`}>\n                    <input className=\"grow pl-2.5 py-2 pr-2 flex flex-wrap gap-1\" type=\"text\" value={inputValue}\n                           onChange={e => setInputValue(e.target.value)} placeholder={placeholder}/>\n                    {/*{!isMultiple && !enableInput ? (*/}\n                    {/*    <p className=\"truncate cursor-default select-none\">{(value && !Array.isArray(value)) ? value.label : placeholder}</p>*/}\n                    {/*) : (*/}\n                    {/*    <>*/}\n                    {/*        {value === null && placeholder}*/}\n\n                    {/*        {Array.isArray(value) && (*/}\n                    {/*            value.map((item, index) => (*/}\n                    {/*                <div className={`bg-gray-200 border rounded-sm flex space-x-1${isDisabled ? ' border-gray-500 px-1' : ' pl-1'}`} key={index}>*/}\n                    {/*                    <p className=\"text-gray-600 truncate cursor-default select-none\">{item.label}</p>*/}\n                    {/*                    {!isDisabled && (*/}\n                    {/*                        <div onClick={e => removeItem(e, item)} className={`flex items-center px-1 cursor-pointer rounded-r-sm hover:bg-red-200 hover:text-red-600`}>*/}\n                    {/*                            <CloseIcon className=\"w-3 h-3 mt-0.5\"/>*/}\n                    {/*                        </div>*/}\n                    {/*                    )}*/}\n                    {/*                </div>*/}\n                    {/*            ))*/}\n                    {/*        )}*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n\n                    <div className=\"flex flex-none items-center py-1.5\">\n                        {loading && (\n                            <div className=\"px-1.5\">\n                                <Spinner/>\n                            </div>\n                        )}\n\n                        {/*{(isClearable && !isDisabled && value !== null) && (*/}\n                        {/*    <div className=\"px-1.5 cursor-pointer\" onClick={clearValue}>*/}\n                        {/*        <CloseIcon className={\"w-5 h-5 p-0.5\"}/>*/}\n                        {/*    </div>*/}\n                        {/*)}*/}\n\n                        <div className=\"h-full\">\n                            <span className=\"w-px h-full inline-block text-white bg-gray-300 text-opacity-0\"/>\n                        </div>\n\n                        <div className=\"px-1.5\">\n                            <ChevronIcon\n                                className={`transition duration-300 w-6 h-6 p-0.5${open ? ' transform rotate-90 text-gray-500' : ' text-gray-300'}`}/>\n                        </div>\n                    </div>\n                </div>\n\n                {(open && !isDisabled) && (\n                    <div tabIndex={-1}\n                         className=\" absolute z-[100] w-full bg-white shadow-lg border rounded py-1 mt-1.5 text-sm text-gray-700\">\n                        {/*{isSearchable && (*/}\n                        {/*    <SearchInput*/}\n                        {/*        value={inputValue}*/}\n                        {/*        placeholder={searchInputPlaceholder}*/}\n                        {/*        onChange={e => setInputValue(e.target.value)}*/}\n                        {/*    />*/}\n                        {/*)}*/}\n\n                        <Options\n                            list={list}\n                            noOptionsMessage={noOptionsMessage}\n                            text={inputValue}\n                            isMultiple={isMultiple}\n                            value={value}\n                        />\n                    </div>\n                )}\n            </div>\n        </SelectProvider>\n    );\n};\n\nexport default Select;"],"names":[],"mappings":"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"}